COMPANY:
CREATE TABLE Company(company_id int,company_name varchar(30), company_street_number int, company_state varchar(25), company_street_name varchar(25),company_city varchar(25),company_pincode varchar(10),company_gst varchar(25) NOT NULL,primary key(company_id));


EMPLOYEE :

Create table Employee(employee_id int, employee_first_name varchar(25) NOT NULL, employee_middle_name varchar(25), employee_last_name varchar(25), company_id int, PRIMARY KEY(employee_id), FOREIGN KEY(company_id) REFERENCES Company(company_id));


EMPLOYEE LOGIN:

CREATE TABLE Employee_Login(employee_id int NOT NULL, employee_username varchar(25) NOT NULL, employee_password varchar(25) NOT NULL,employee_login_date DATE, employee_time TIME, PRIMARY KEY (employee_id),FOREIGN KEY(employee_id) REFERENCES Employee(employee_id));


CUSTOMER :

CREATE TABLE Customer(customer_id int,customer_first_name varchar(25) NOT NULL, customer_middle_name varchar(25),customer_last_name varchar(25), customer_street_number int, customer_street_name varchar(25) , customer_city varchar(25) NOT NULL, customer_state varchar(25) , customer_pincode varchar(10) NOT NULL, customer_email_id varchar(25), PRIMARY KEY(customer_id));

CUSTOMER LOGIN:

CREATE TABLE Customer_Login(customer_id int NOT NULL, customer_username varchar(25) NOT NULL, customer_password varchar(25) NOT NULL,customer_login_date DATE, customer_time TIME, PRIMARY KEY (customer_id),FOREIGN KEY(customer_id) REFERENCES Customer(customer_id));


 
PRODUCT:
CREATE TABLE Product(product_id int, company_id int, product_name varchar(25) ,product_price decimal(10,3), product_category_level int CHECK(product_category_level=1 or product_category_level=2 or product_category_level=3), PRIMARY KEY(product_id),FOREIGN KEY(company_id) REFERENCES Company(company_id));

ORDER:
CREATE TABLE Order1(order_id int,order_date DATE NOT NULL, customer_id int, company_id int, total_order_value decimal(10,3), shipping_cost decimal(10,3), shipping_agency varchar(25), status varchar(10) CHECK(status='Pending' or status='Approved' or status='Completed' or status='Expired') DEFAULT 'Pending',PRIMARY KEY(order_id), FOREIGN KEY (customer_id) REFERENCES Customer (customer_id), FOREIGN KEY (company_id) REFERENCES Company (company_id));


INVOICE:

CREATE TABLE INVOICE(invoice_id int AUTO_INCREMENT,invoice_date date NOT NULL, order_id int UNIQUE,gst_type varchar(15) CHECK(gst_type='Same State' or gst_type='Inter State'),total_gst_amount decimal(10,3), total_invoice_value decimal(10,3), payment_status varchar(25) CHECK(payment_status='Paid' or payment_status='Unpaid'), PRIMARY KEY(invoice_id, order_id),FOREIGN KEY(order_id) REFERENCES Order1(order_id));

ORDER-PRODUCT:

Create table Order_Product(order_id int, product_id int, quantity int,foreign key(order_id) references Order1(order_id), foreign key(product_id) references Product(product_id));

CUSTOMER-PHONE:

Create table Customer_Phone(customer_id int,customer_phone_number varchar(10), PRIMARY KEY(customer_id,customer_phone_number));

COMPANY-CUSTOMER:

Create table Company_Customer(company_id int, customer_id int, PRIMARY KEY(company_id, customer_id), FOREIGN KEY(company_id) REFERENCES Company(company_id), FOREIGN KEY(customer_id) REFERENCES Customer(customer_id));




#Table Alterations
Alter table Order1 Modify Column status varchar(10) CHECK(Status='Pending' or Status='Approved' or status='Expired' or status='Completed') DEFAULT 'Pending';











create table order&prod
orderid         prodid         quantity
01               P11            2
01               P12            1
01               P25           3






